import { loadTasksFromLocalStorage, renderTasks } from "./storage.js";

const showFilteredTasks = (filterType) => {
    const tasks = loadTasksFromLocalStorage();
    const filtered = tasks.filter(task => {
        if (filterType === 'active') return !task.completed;
        if (filterType === 'completed') return task.completed;
        return true;
    });
    
    // –í–†–ï–ú–ï–ù–ù–û–ï –†–ï–®–ï–ù–ò–ï: —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ü–ï–†–ï–î —Ä–µ–Ω–¥–µ—Ä–æ–º
    localStorage.setItem('all_tasks_backup', JSON.stringify(tasks));
    
    renderTasks(filtered);
    
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–∏

    setTimeout(() => {
        const fullTasks = JSON.parse(localStorage.getItem('all_tasks_backup') || '[]');
        localStorage.setItem('tasks', JSON.stringify(fullTasks));
    }, 100);
    //–ù–æ —ç—Ç–æ –∫–æ—Å—Ç—ã–ª—å! –ù—É–∂–Ω–æ –ø–µ—Ä–µ–¥–µ–ª–∞—Ç—å saveTasksToLocalStorage —á—Ç–æ–±—ã –æ–Ω–∞ –Ω–µ –∑–∞–≤–∏—Å–µ–ª–∞ –æ—Ç DOM! üèóÔ∏è
}



const handleRouteChange = () => {
    const path = window.location.pathname

    switch (path) {
        case '/':
            showFilteredTasks('all')
            break
        case '/active':
            showFilteredTasks('active')
            break
        case '/completed':
            showFilteredTasks('completed')
            break
        case '':
            showFilteredTasks('all')
            break
        default:
            return
    }
}

export const initRouter = () => {

    console.log('–†–æ—É—Ç–µ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω')

    window.addEventListener('popstate', handleRouteChange);

    document.addEventListener('click', (e) => {

        if (e.target.classList.contains('nav-link')) {
            e.preventDefault()
            const newPath = e.target.getAttribute('href');
            history.pushState(null, '', newPath); // –ú–µ–Ω—è–µ–º URL
            handleRouteChange()
        }
    })

    handleRouteChange()
}

