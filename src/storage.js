/**
 * –ú–û–î–£–õ–¨: –†–ê–ë–û–¢–ê –° –î–ê–ù–ù–´–ú–ò (storage.js)
 * –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å: —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, —Ä–∞–±–æ—Ç–∞ —Å LocalStorage
 * –ü–∞—Ç—Ç–µ—Ä–Ω: Data Layer / Repository Pattern
 */

import { taskList } from './dom-elements.js'
import { addTask } from './task-manager.js';

// üéØ –ü–ê–¢–¢–ï–†–ù: Data Access Layer
// –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å —Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ

export const getCurrentTasks = () => {
    const savedTasks = localStorage.getItem('tasks');
    if (!savedTasks) return []; // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –í—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –º–∞—Å—Å–∏–≤
    const tasksArray = JSON.parse(savedTasks);
    return tasksArray || []; // ‚úÖ –î–í–û–ô–ù–ê–Ø –ó–ê–©–ò–¢–ê: –ù–∞ —Å–ª—É—á–∞–π parse –æ—à–∏–±–æ–∫
}

export const saveTasksToLocalStorage = () => {
    // ‚úÖ –†–ï–§–ê–ö–¢–û–†–ò–ù–ì: –¶–∏–∫–ª –∑–∞–º–µ–Ω–µ–Ω –Ω–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é —Ü–µ–ø–æ—á–∫—É
    const tasksArray = [...taskList.children] // üéØ NodeList ‚Üí Array
        .map(task => {
            const textElement = task.querySelector('span')
            const checkbox = task.querySelector('input[type="checkbox"]')
            
            // üõ°Ô∏è –ü–ê–¢–¢–ï–†–ù: Defensive Programming
            if (textElement && checkbox) {
                return { // üéØ Data Transformation: DOM ‚Üí Object
                    text: textElement.textContent,
                    completed: checkbox.checked,
                }
            }
            return null // üéØ –Ø–≤–Ω–æ–µ —É–∫–∞–∑–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –¥–∞–Ω–Ω—ã—Ö
        })
        .filter(task => task !== null) // üéØ Data Cleaning: —É–±–∏—Ä–∞–µ–º –±–∏—Ç—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã

    // üõ°Ô∏è –ü–ê–¢–¢–ï–†–ù: Error Boundary
    try {
        localStorage.setItem('tasks', JSON.stringify(tasksArray))
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ LocalStorage: ', error)
        alert('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–¥–∞—á–∏: ', error) // üéØ User Feedback
    }
}

export const loadTasksFromLocalStorage = () => {
    const tasksArray = getCurrentTasks()
    taskList.innerHTML = ''; // üéØ Clean Slate Pattern: –æ—á–∏—Å—Ç–∫–∞ –ø–µ—Ä–µ–¥ —Ä–µ–Ω–¥–µ—Ä–æ–º

    // üîÑ –ü–ê–¢–¢–ï–†–ù: Data to DOM Mapping
        tasksArray.forEach(taskValue => {
            addTask(taskValue); // üéØ –î–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—Ä–∏—Å–æ–≤–∫–∏
        });
}

// üö® –ê–†–•–ò–¢–ï–ö–¢–£–†–ù–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: Split State Management
// –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–∞–∑–º–∞–∑–∞–Ω–æ –º–µ–∂–¥—É DOM –∏ LocalStorage
// üí° –†–ï–®–ï–ù–ò–ï: –ï–¥–∏–Ω—ã–π Source of Truth (Redux-like store)